# Practicum-2
Код разделён на 3 файла:
- main.cpp, в котором находится реализация меню программы, а также функции Task1() и Task2(), которые содержат в себе информацию о рабочих файлах и алгоритм выполнения.
- techfunc.h, в котором содержатся функции работы с данными, что уменьшает количество повторяющихся строчек кода.
- extrafunc.h, в котором содержатся дополнительные функции, которые никак сильно не влияют на работу программы.
main.cpp:
- int main() содержит в себе меню, реализованное с помощью switch-case. При нажатии на клавишу либо начинает работать задание, либо выводится информация, либо можно кастомизировать рабочее пространство.
- Task1(). Сначала объявляются переменные f1, f2 и f3, которые содержат в себе названия файлов, а также объявляются переменные массивов и переменные размеров. Сначала создаётся первый файл с элементами в нём, которые затем сортируются по возрастанию и перезаписываются. Потом подобные действия происходят и со вторым файлом. Далее создаётся массив c[n+m] из элементов первых 2 файлов, который сортируется и записывается в третий файл.
- Task2(). Сначала объявляется переменная ft2, которая содержит в себе название файла, а также объявляются переменные количества матриц, размеров и количества нулей. Сначала с клавиатуры вводится количество матриц. После этого запускается цикл работы с матрицами. Первым шагом создаётся матрица с заданным количеством нулей с помощью рандомайзера, после чего идёт подсчёт количества примыкающих нулей и записывается в файл.
techfunc.h:
- Сначала заданы глобальные переменные типов ofstream (fp), ifstream (fx), int (i, j, temp). Они необходимы для работы всех функций в данном файле. Являются общими для обоих заданий.
- Функции wopen(), wclose(), ropen(), rclose() работают как обычные open() и close(). Они необходимы для взаимосвязи main.cpp и techfunc.h. Являются общими для обоих заданий.
- Функция adding() записывает в созданный файл элементы неотсортированные элементы и возвращает их количество. Сначала вводится элемент с клавиатуры. Если он больше или равен нулю, то он записывается в файл. Запись элементов идёт до тех пор, пока не введён 0. Данная функция для первого задания.
- Функция reading() считывает элементы из файла и записывает их в массив. Данная функция для первого задания.
- Функция sort() сортирует элементы массива по возрастанию и перезаписывает в файл. Во время исполнения программа проходится по всем элементам. Если один из последующих элементов меньше текущего, то они меняются местами. После сортировки все элементы записываются в файл. Данная функция для первого задания.
- Функция unite() записывает элементы первых двух файлов в единый массив. Сначала записываются элементы массива a, потом массива b. Данная функция для первого задания.
- Функция writing() записывает полученную матрицу в файл, а после её записи записывает количество примыкающих друг к другу нулей. Данная функция для второго задания.
- Функция nulls() считает количество примыкающих нулей в матрице. Программа проходит по всей матрице и проверяет соседние элементы. Если текущий элемент 0, то она проверяет все соседние элементы в порядке (слева, справа, сверху и снизу) на то, чтоб он был равен нулю и на положение текущего элемента. Если обнаруживается 0 по соседству, то счётчик примыкающих нулей увеличивается на 1, а дальнейшая проверка игнорируется.
- Функция randomizer() заполняет матрицу нулями или единицами с заданной долей нулей, которая вводится с клавиатуры. Сначала идёт проверка на соответствие границам: если введённое значение меньше 0, то оно становится 0, а если больше n*m, то становится равным n*m. Дальше идёт проверка на частные случаи (ch = 0 и ch = n*m). Затем переданное в функцию значение даётся для переменной z, а n*m (размер матрицы) – ch даётся для переменной e. Дальше значения элементов матрицы задаётся с помощью rand() % 2: в случае выпадения единицы e уменьшается на 1, а в случае выпадения нуля z уменьшается на 1. Когда z или e доходит до 0, то остальные элементы заполняются либо единицами (z = 0), либо нулями (e = 0). Полученная матрица возвращается.
extrafunc.h:
- Функция customize() задаёт цветовую гамму для консоли. Всего есть 9 вариантов + исходный. Выбирается нажатием на клавишу от 0 до 9.
- Функция info() выводит информацию о заданиях из файла info.txt на экран.
